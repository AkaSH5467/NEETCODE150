class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string>ans;
        func(ans,n,0,0,"");
        return ans;
    }

    void func(vector<string>&ans,int n,int open,int close,string curr)
    {
      if(curr.length()==n*2)           //n*2 == curr length
      {
        ans.push_back(curr);
        return;
      }

      if(open<n)
      {
        func(ans,n,open+1,close,curr+'(');        //open<n increment open
      }
      if(close<open)
      {
        func(ans,n,open,close+1,curr+')');       //close<open increment close
      }
    }
};
