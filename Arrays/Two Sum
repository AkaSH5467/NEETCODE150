/****************************** Using Nested Loop****************************************/
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size();

        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(nums[i]+nums[j]==target)
                {
                    return {i,j};
                    break;
                }
            }
        }

        return {-1,-1};
    }
};

/**********************************Approach 2 (using Maps)**********************************/

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int,int>mp;
        int n = nums.size();
        
        for(int i=0;i<n;i++)
        {
            int ans = target-nums[i];
            if(mp.find(ans)!=mp.end())
            {
                return {mp[ans],i};
            }
            mp[nums[i]]=i;
        }

        return {-1,-1};
    }
};
