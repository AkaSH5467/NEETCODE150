class Solution {
public:
    static bool comp(pair<int,int>&a,pair<int,int>&b)
    {
        return a.second>b.second;
    }
    vector<int> topKFrequent(vector<int>& nums, int k) {
        
        map<int,int>mp;

        for(int i=0;i<nums.size();i++)                                    //add frequency
        {
            mp[nums[i]]++;
        }              

        vector<pair<int,int>>v;                                        //make pair vector and add map 
        for(auto x:mp)
        {
            v.push_back(x);
        }

        sort(v.begin(),v.end(),comp);                                      //sort by comparing two pairs

        int count=0;
        vector<int>ans;

        for(auto it:v)
        {
            ans.push_back(it.first);                                          //push key
            count++;

            if(count>=k)                                          //maintain count
            {
                break;
            }
        }

        return ans;                               
    }
};
